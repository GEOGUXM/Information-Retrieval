http://hissa.ncsl.nist.gov/bottom7.htm

   The Software Quality Group develops tools and techniques to help
   industry improve the quality of information technology products.
   Products include static analysis tools, verification and validation
   techniques, formal methods, and data on software failures.  The
   Software Quality Group collaborates with industry, academia, and other
   Government agencies to develop technology for high integrity software
   systems.

   A major focus within the Software Quality Group, is to provide
   technology to produce high integrity, affordable software in high
   integrity software systems.  High integrity software is software that
   can and must be trusted to work dependable in these and other critical
   functions (e.g. communications (computers, telephony), software in
   safety systems of nuclear power plants, medical devices, electronic
   banking, air traffic control, automated manufacturing, and some
   business systems).

               Research Project Descriptions and Related Tools

   Automated test methods and tools to generate tests from formal
   specifications
   CRCDict dictionary chapter of algorithms and data structures
   Experimentation methods for evaluating software methods along with
   studies about their usage
   Fault & Failure Analysis Repository (EFF) guidance on fault prevention
   and detection; repository of fault and failure data for public analysis
   [Tool]; summary of current data [Data]
   Programs for Evaluating Software Testing (PEST) programs with known
   bugs to enable researchers and vendors to benchmark testing methods and
   tools
   QIS java quality information systems [Tool]
   RISQ reference information for Software Quality literature search by
   software
   quality taxonomy [Tool]
   Role Based Access Control method to specify and enforce
   enterprise-specific security policies, mapping naturally to an
   organization's structure
   Software Engineering Body of Knowledge (SWEBOK) in conjunction with
   IEEE Computer Society and ACM, to prepare taxonomy and guidance to
   generally accepted software engineering principles and knowledge
   Unravel (program slicing) method and tool to analyze source code
   [Tool]

                                Publications

            Analysis and Tools                      Open Systems
   Formal Methods & Software Development     Role Based Access Control
          High Integrity Systems             Software Quality Assurance
        Measurement and Experiment       Verification, Validation & Testing

     Please send comments or questions concerning HISSA to Michael Koo:
                                [email10.gif]
                            michael.koo@nist.gov

                                 DISCLAIMER

          Webpages created by Roger S. Gima at ROGER.GIMA@nist.gov.
